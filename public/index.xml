<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Cactus Theme</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Hugo Cactus Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2015 16:27:05 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Wordpress to Hugo</title>
      <link>http://localhost:1313/post/wordpress-to-hugo/</link>
      <pubDate>Sun, 09 Aug 2015 16:27:05 -0400</pubDate>
      
      <guid>http://localhost:1313/post/wordpress-to-hugo/</guid>
      <description>&lt;p&gt;Wordpress is arguably the most prolific blogging platform. It&amp;rsquo;s actually more than
that really. It&amp;rsquo;s a full-featured CMS and while it has its uses, I&amp;rsquo;ve fallen out of
love with all the overhead of just keeping a simple blog going. This is the first
post written on Hugo, a static site generator written in Go.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve decided to leave a dynamic CMS in favor of a simpler solution that fits my workflow
of a software engineer better.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Expensive hosting&lt;/li&gt;
&lt;li&gt;To deal with PHP&lt;/li&gt;
&lt;li&gt;To deal with security around MYSQL&lt;/li&gt;
&lt;li&gt;To manage a software stack for a simple blog&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I do like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;Fast websites&lt;/li&gt;
&lt;li&gt;Low cost&lt;/li&gt;
&lt;li&gt;Open source (Wordpress falls into here too)&lt;/li&gt;
&lt;li&gt;Using the same tools as my normal dev workflow&lt;/li&gt;
&lt;li&gt;Learning something new (in this case Go and Go templating)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My wife has a food blog, chocolateandcarrots.com, where she needs to deal with users,
comments, nested taxonomies and a simple UI for managing her content, so she&amp;rsquo;ll stick
with Wordpress for now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AngularJS Click to Close Menu</title>
      <link>http://localhost:1313/2015/05/angularjs-click-to-close-menu/</link>
      <pubDate>Fri, 22 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/05/angularjs-click-to-close-menu/</guid>
      <description>

&lt;p&gt;Recently, atÂ &lt;a href=&#34;http://www.zubie.com&#34; target=&#34;_blank&#34;&gt;work&lt;/a&gt;, I came across (or was told to fix) a need to give a more natural feel to the UX on our web app. We have various menus throughout the app that can be toggled by clicking/touching an element, but the only way to close them is to click/touch the same element again. With mobile UX paradigms making their way into every aspect of our lives, I had to rethink the original approach on how to show or hide content when the user&amp;#8217;s interactions are required. I&amp;#8217;m used to swipes and clickingÂ &lt;strong&gt;off&lt;/strong&gt; of elements to close them, so let&amp;#8217;s bring them to our web experience.&lt;/p&gt;

&lt;p&gt;AngularJS has a great set of directives, includingÂ &lt;code&gt;ng-show&lt;/code&gt;, which I use extensively to display or hide content based on user interaction or the &lt;a href=&#34;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&#34; target=&#34;_blank&#34;&gt;model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The app is becoming more complex and allows for more interaction that originally designed, so it was time to sit down and fix the wonky interaction!&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s how I solved the problem.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a directive to throw on an element that will be interacted with&lt;/li&gt;
&lt;li&gt;(Optional) Add a class to child elements where you want to prevent the default close behavior. For this, you&amp;#8217;ll need to modify the directive to check for the existence of the child class.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;directive:c4a850bcbebf4c52fb6a9d3d2b2ff6a6&#34;&gt;Directive&lt;/h2&gt;

&lt;pre class=&#34;lang:js decode:true &#34;&gt;&#39;use strict&#39;;
angular.module(&#39;app&#39;)
    .directive(&#39;closeOnClick&#39;, function () {
        return {
            scope: {
                watchValue: &#39;=&#39;
            },
            restrict: &#39;EA&#39;,
            link: function (scope, element) {
                element.bind(&#39;click&#39;, function (e) {
                    scope.watchValue = !scope.watchValue;
                    // prevents a double click behavior                    
                    e.stopPropagation();
                    // let Angular know we&#39;re doing our thing
                    scope.$apply()
                });
            },
            controller: function ($scope, $document) {
                $document.on(&#39;click&#39;, function (e) {
                    if ($scope.watchValue) {
                        $scope.watchValue = false;
                        $scope.$apply();
                    }
                });
            }
        }
});&lt;/pre&gt;

&lt;p&gt;What is happening is an event handler is bound to the element on creation (during the linking phase). This is what listens to our click and inverts the the watchValue that we defined. The controller function takes care of listening for clicks on the document as a whole and if the menu or object is open (or truthy), then, let&amp;#8217;s go ahead and close/hide the element.&lt;/p&gt;

&lt;p&gt;Usage in the view&lt;/p&gt;

&lt;pre class=&#34;lang:xhtml decode:true&#34; title=&#34;Usage in the view&#34;&gt;&amp;lt;div close-on-click watch-value=&#34;showStuff&#34;&amp;gt;
    &amp;lt;div ng-show=&#34;showStuff&#34;&amp;gt;
        &amp;lt;h1&amp;gt;Cool hidden stuff&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it! Now, we have an improved user experience with Angular&amp;#8217;s most powerful component, directives!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>3D Printing Caps</title>
      <link>http://localhost:1313/2015/05/3d-printing-caps/</link>
      <pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/05/3d-printing-caps/</guid>
      <description>&lt;div&gt;
  I love how a 3d printer (or more accurately any rapid prototyper) can enable the production of a physical widget from a digital model in no time at all.
&lt;/div&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;div&gt;
  I recently installed some spring-loaded wheels on our barn-style gates. They have helped tremendously in keeping the latch aligned (those doors are quite heavy). After installing the wheels, I noticed the vertical mounting rod was left open to the elements, so I quickly whipped up a small cap to cover the gap. It&amp;#8217;s the small things.
&lt;/div&gt;

&lt;div&gt;
  &lt;img src=&#34;https://scontent.cdninstagram.com/hphotos-xfp1/l/t51.2885-15/e15/11190271_1150723098277136_156948816_n.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt; 
  
  &lt;div&gt;
    via Instagram http://ift.tt/1JxQusY
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How To Auto Mount a Network Share (Drobo 5N) on Ubuntu</title>
      <link>http://localhost:1313/2015/01/how-to-auto-mount-a-network-share-drobo-5n-on-ubuntu/</link>
      <pubDate>Sat, 24 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/01/how-to-auto-mount-a-network-share-drobo-5n-on-ubuntu/</guid>
      <description>&lt;p&gt;Fed up with the performance limitations of running Plex Media Server, or PMS, (which I really love) on our Drobo 5N, I decided (with my wife&amp;#8217;s scrupulous approval) to build a dedicated PMS box to handle future 1080p streams. Being that the Drobo is still highly capable as a media server in general, I&amp;#8217;m keeping all of our media there and will just use that to serve content to the new PMS box. I have a small amount of experience with Linux, but this gave me an opportunity to dive into it a bit more, while being able to enjoy movies on the big screen.&lt;/p&gt;

&lt;p&gt;The main hurdle I ran into is mounting a network share. Mac OSX and Windows really makes this stupid easy, but in Ubuntu, there is some config needed to have the server ready to serve (forgive the pun) when the computer boots up.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Some of this may pertain to just Plex configuration, but I believe it&amp;#8217;s helpful in general&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After installing Plex (not the client, the media server), make sure to install two Linux utilities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cifs-utils&lt;/code&gt; (Allows for the use of CIFS, a sort of newer replacement for Samba (or SMB. The details of different file systems are out of scope for this post)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;avahi&lt;/code&gt; (Allows us to grab our local server by its hostname (friendly name) rather than specifying the IP address of the device. Think of it as a local DNS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that out of the way, let&amp;#8217;s get the mount point ready.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mkdir /mnt/shares/server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Feel free to replace &lt;code&gt;server&lt;/code&gt; with whatever name you want. Our server is named R2 after an &lt;a href=&#34;http://en.wikipedia.org/wiki/Star_Wars&#34; title=&#34;Star Wars&#34;&gt;obscure science-fiction universe&lt;/a&gt; from the mind of George Lucas. ðŸ˜‰&lt;/p&gt;

&lt;p&gt;Next, we need to edit a configuration file known as &lt;code&gt;fstab&lt;/code&gt;, which will handle auto mounting the share for us when the pc restarts.&lt;/p&gt;

&lt;p&gt;Use whatever editor you are comfortable with (vi, nano, or Gedit). I used Gedit since my keyboard was mapped in a weird way with vi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gedit /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This opens the file for editing. Follow this pattern to get the server setup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//server.local /mnt/shares/server cifs username=mickey,password=mouse,iocharset=utf8,sec=ntlm 0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course, replace the username and password with whatever you are using.Some shares won&amp;#8217;t require them, so they can be omitted. Look &lt;a href=&#34;https://wiki.ubuntu.com/MountWindowsSharesPermanently&#34;&gt;here&lt;/a&gt; for further detail.Â Also, some servers may prefer NFS, NTFS or SMB, so read up on their native file system.&lt;/p&gt;

&lt;p&gt;now, to mount the share type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mount -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and your share should be visible in the file manager.&lt;/p&gt;

&lt;p&gt;Now, go forth and add some libraries to your PMS and watch away!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sugru hack: An Auxiliary Cord Holder.</title>
      <link>http://localhost:1313/2014/06/sugru-hack-an-auxiliary-cord-holder/</link>
      <pubDate>Wed, 18 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/06/sugru-hack-an-auxiliary-cord-holder/</guid>
      <description>&lt;p&gt;Sugru is an interesting piece of &lt;em&gt;tech&lt;/em&gt;. I give away packs to friends and coworkers in hopes that they&amp;#8217;ll find interesting uses for the stuff as I have. Here, I solved a nagging problem that I have in the car. When I finish listening to music via the auxiliary jack, I tend to drop it on the floor. This solution ensures that I do not have to dig around for the cable the next time I want to enjoy some tunes in the car.&lt;/p&gt;

&lt;div&gt;
  &lt;img src=&#39;http://scontent-b.cdninstagram.com/hphotos-xfp1/t51.2885-15/10358257_287678714738699_1013438920_n.jpg&#39; style=&#39;max-width:100%;&#39; /&gt;&lt;br /&gt; 
  
  &lt;div&gt;
    via Instagram http://ift.tt/1lQM6fr
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Helpful Plugins for Migrating WordPress from localhost to Production</title>
      <link>http://localhost:1313/2014/03/helpful-plugins-for-migrating-wordpress-from-localhost-to-production/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/03/helpful-plugins-for-migrating-wordpress-from-localhost-to-production/</guid>
      <description>&lt;p&gt;There are some tutorials available for migrating a local instance of WordPress to a live instance for the world to see. In my case, I was ready to deploy some local development to the host, but in my case, I was adding a new custom child theme based on twenty-thirteen (it&amp;#8217;s live at &lt;a href=&#34;http://chocolateandcarrots.com&#34; title=&#34;chocolateandcarrots.com&#34;&gt;chocolateandcarrots.com&lt;/a&gt;). I was pursuing the path of creating a brand new instance of WordPress using a new, clean database, but problems arose when trying to import the content, specifically the post&amp;#8217;s featured image. For some reason, the links would not update, even though everything was on the same server. I&amp;#8217;d like to share some of the plugins I used for a smooth transition from local development to production:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title=&#34;Search and Replace&#34; href=&#34;http://bueltge.de/wp-suchen-und-ersetzen-de-plugin/114/&#34; target=&#34;_blank&#34;&gt;Search and Replace&lt;/a&gt;Â by Frank Bultge: This plugin allows to replace strings in the database. I mostly used this when downloading the production database and content (for offline development). I would essentially replace the host url with &amp;#8216;localhost:8888&amp;#8242; (port 8888 since that&amp;#8217;s the default set by MAMP), so all of the content would properly render.&lt;/li&gt;
&lt;li&gt;&lt;a title=&#34;Regenerate Thumbnails&#34; href=&#34;http://www.viper007bond.com/wordpress-plugins/regenerate-thumbnails/&#34; target=&#34;_blank&#34;&gt;Regenerate Thumbnails&lt;/a&gt; by Viper007Bond: I&amp;#8217;m sure I would have pulled my hair out if I didn&amp;#8217;t find this plugin. Since the website I was working on is image heavy, having a featured post for the blog page was essential. After setting the custom thumbnail size in the WordPress admin area and adding the hook in functions.php, I fired up the plugin and it automagically reproduced thumbnails for my posts. Ahhh!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need to do some WordPress administration for batch jobs, I highly recommend these plugins.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bracket and Stand for the iPad Mini</title>
      <link>http://localhost:1313/2013/10/bracket-and-stand-for-the-ipad-mini/</link>
      <pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/10/bracket-and-stand-for-the-ipad-mini/</guid>
      <description>

&lt;p&gt;For my second project utilizing the 3d printer, a Solidoodle, I wanted to design something from the ground up to solve a problem: find a way to better secure the iPad Mini in the car to appease the baby&amp;#8217;s senses, i.e., keep the iPad hanging up so we can get his fill of &amp;#8216;Baby Einsteins&amp;#8217; on a long car trip.&lt;/p&gt;

&lt;h2 id=&#34;concept-1-corner-brackets:d560f0219f8513849d0b9b0c4bfb5c36&#34;&gt;Concept 1: Corner Brackets&lt;/h2&gt;

&lt;p&gt;The first design utilized corner clamps held together by pressing aluminum rods into blind holes. The objectives of this design were to minimize the material noticed by the user and be rigid. The aluminum rods also have the added benefit of attaching auxiliary parts anywhere along their length.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/Assem1-front-1024x560.jpg&#34; alt=&#34;Overview&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/Assem1-With-Hooks.jpg&#34; alt=&#34;1st iteration&#34; /&gt;
1st design: corner brackets, aluminum rod and hooks&lt;/p&gt;

&lt;p&gt;While the design was aesthetically pleasing from the front, I discovered two issues that made me rethink my strategy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The press fit of the aluminum rods would eventually wear out the holes in the printed parts.&lt;/li&gt;
&lt;li&gt;Assembly/disassembly would take a few seconds to line everything up and would most likely end up in a frustrated mess on the floor&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the final print of the assembly. Sometimes you have to hold and interact with an object before iterating again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/ipad-mini-1st-design.jpg&#34; alt=&#34;Final Print&#34; /&gt;
1st design: Final print&lt;/p&gt;

&lt;h2 id=&#34;design-2-snap-on-bracket-with-kickstand:d560f0219f8513849d0b9b0c4bfb5c36&#34;&gt;Design 2: Snap-on Bracket with Kickstand&lt;/h2&gt;

&lt;p&gt;Unhappy with the result of the first design, I took the suggestion from a colleague to just use a single piece to wrap around the edges. From there I tweaked the design to give a snug, but not overly tight (my wife may still disagree on this point) fit to the iPad. I reused some of the aluminum rod ordered for the first design and used it as a pin to attach the hook/kickstand part. After a few trials getting the Solidoodle to give me non-warping prints, which I&amp;#8217;ll cover another day (and tweaking the design by tenths of mm&amp;#8217;s), I finally had a good working solution. Below is a gallery of the CAD model, final product and some use cases.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/Assem2-2-Rear-1024x620.jpg&#34; alt=&#34;Rear 1&#34; /&gt;
&lt;img src=&#34;http://localhost:1313/img/2013/10/Assem2-2.jpg&#34; alt=&#34;Rear 2&#34; /&gt;
2nd design (rear): &amp;#8216;Unibody&amp;#8217; clamp with pivoting hook&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/20131009-iPad-Mini-Bracket-6-1024x757.jpg&#34; alt=&#34;Final - Hanging on Chair&#34; /&gt;
&lt;img src=&#34;http://localhost:1313/img/2013/10/20131009-iPad-Mini-Bracket-2-1024x682.jpg&#34; alt=&#34;Final - Standing Rear&#34; /&gt;
&lt;img src=&#34;http://localhost:1313/img/2013/10/20131009-iPad-Mini-Bracket-1024x682.jpg&#34; alt=&#34;Final - Standing&#34; /&gt;
&lt;img src=&#34;http://localhost:1313/img/2013/10/20131009-iPad-Mini-Bracket-7-1024x510.jpg&#34; alt=&#34;Final - Hanging&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/10/Liam-watching-the-iPad-Mini-4276.jpg&#34; alt=&#34;Final in Use&#34; /&gt;
2nd Design: Shown using the kickstand&lt;/p&gt;

&lt;p&gt;This was another great learning opportunity in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;industrial design: I have some aesthetic and finishing changes I would like to make&lt;/li&gt;
&lt;li&gt;mechanical design: clamping force and tolerancing for 3D printing&lt;/li&gt;
&lt;li&gt;user feedback: make sure the wife and baby are pleased users&lt;/li&gt;
&lt;li&gt;3D Printing nuances: warping, thermal contraction, tolerances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, on to find more problems to solve (and taking a relaxing drive knowing the baby is content with his visual educational material).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improving Solidoodle Prints</title>
      <link>http://localhost:1313/2013/09/improving-solidoodle-prints/</link>
      <pubDate>Sun, 29 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/09/improving-solidoodle-prints/</guid>
      <description>&lt;p&gt;When I begin to explain &lt;em&gt;3D printing&lt;/em&gt; to some of my colleagues, their jaw migrates to the agape position while:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They are learning about a new technology that is almost magical and&lt;/li&gt;
&lt;li&gt;They are already figuring out how to use this wonder technology to solve some problem.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Case in point: a colleague asked about printing a replacement part for a RC car, but modifying and repurposing it for a completely different application. I recieved the part, discussed how we could modify it for his needs, measured, modeled and began to print.&lt;/p&gt;

&lt;p&gt;And then small disasters struck! The piece is flat, which I thought would have given me great adhesion to the build platform, but I obviously had not tested this theory on parts with larger than a 1cmÂ² footprint.&lt;/p&gt;

&lt;p&gt;We have some warping problems (no, not the kind that Starship Enterprise did in the latest movie). See below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/09/3D-printer-stuff-2738.jpg&#34; alt=&#34;3d Parts&#34; /&gt;
Prints after various tweaks&lt;/p&gt;

&lt;p&gt;Here are the steps I took between each print, until I finally was happy with the output:&lt;/p&gt;

&lt;p&gt;The first print became detached from the base since all of the corners started warping and tracking upwards. I believe since so little surface area was contacting the build platform, it just spun out of control when the nozzle was close at a certain point. Some old gooey filament on the side of the nozzle may have also contacted the part as well.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clean the nozzle&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The second part finished, but the warping issue still persisted. To the Solidoodle forums I go!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Raise the heated bed temperature to 100Â°C and fine-tuned the level of the platform according to Solidoodle&amp;#8217;s website.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The third print did much better, although I was still not happy with the continuing warpage.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Raise the heated bed temperature to 103Â°C (this was definitely scientifically chosen as a precise temperature&amp;#8230; although this thread speaks of 100Â°C being a magic number). I also asked my wife for some hairspray. Apparently this stuff was engineered to make ABS parts really stick to the platform and as a side benefit also nicely styles hairdos.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The final part came out really nice. There is a minute amount of warping on one corner (less than .3mm or 1 layer). The bottom part in the photo above shows the final print.&lt;/p&gt;

&lt;p&gt;For parts with more than a few cmÂ² surface area contact with the bed, this is a must. I&amp;#8217;ve read that with some tuning out of the box, this machine can really do some amazing stuff.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One Printer Fixes Another</title>
      <link>http://localhost:1313/2013/09/one-printer-fixes-another/</link>
      <pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/09/one-printer-fixes-another/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/09/IMG_20130912_101018.jpg&#34; alt=&#34;3d print&#34; /&gt;
Dymo label maker opened up with replacement lever partially installed
Work recently had a cleanout day to get rid of clutter in our office area; a late spring-clean, if you will. I&amp;#8217;m always on the hunt for working (or not in this case) gadgets for spares or to re-purpose. I came across a Dymo 210D label maker. The electronics function just fine and there were quite a few extra unused cartridges as well. The only problem was that I kept getting a &lt;em&gt;tape jam&lt;/em&gt; error when trying to print. After reading through Dymo&amp;#8217;s troubleshooting literature, which had little value in this case, I disassembled the unit and found the culprit: a small section of a lever arm (for lack of a better term here) broke where a spring should be connected. Sounds suspect to me!&lt;/p&gt;

&lt;p&gt;Excited that I just acquired a new 3d printer, a &lt;a href=&#34;http://store.solidoodle.com/index.php?route=product/product&amp;amp;product_id=56&#34; title=&#34;Solidoodle&#34;&gt;Solidoodle Gen 2&lt;/a&gt; with the heated bed (a must for ABS prints), I decided to use my new wonder-machine for fix this printer.&lt;/p&gt;

&lt;p&gt;After the part was completed, I compared it with the original. By doing no tuning or adjustments on the 3d printer, I&amp;#8217;m pretty happy with the outcome. Of course, I had to print rafts to support the small overhang, so there are some squirrely print layers at that location and the inner holes came out about .020&amp;#8243; undersize, but overall, I&amp;#8217;m happy! I just had one issue: I modeled the part wrong. As an engineer, it&amp;#8217;s always important to validate your assumptions and double and triple check everything. Here&amp;#8217;s a good example of what happens when you don&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/09/IMG_20130912_063640.jpg&#34; alt=&#34;Original&#34; /&gt;
Image showing the original part and the prints&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/09/IMG_20130912_095550.jpg&#34; alt=&#34;Clean Up&#34; /&gt;
Drill bits were used to clean up the internal thru holes&lt;/p&gt;

&lt;p&gt;After the quick fix and another 10 minute print, I was in business. I used some drill bits to clean up the internal holes and installed the part.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/09/IMG_20130912_143019.jpg&#34; alt=&#34;Working Unit&#34; /&gt;
The working unit!&lt;/p&gt;

&lt;p&gt;I assembled the unit and voila! My new printer fixed an old one. It was a great experience with: fixing something, using a 3d printer, applying engineering to home use and learning how simple label makers are.&lt;/p&gt;

&lt;p&gt;My daily inspiration from fixing and repairing is hanging on my cubicle wall at work: Sugru&amp;#8217;s Fixer&amp;#8217;s Manifesto seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://files.sugru.com/uploads/images/82/original/the_fixers_manifesto_grey.gif?1353329720&#34; alt=&#34;Fixer Manifesto&#34; /&gt;
The Fixer&amp;#8217;s Manifesto by Sugru&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Timer Web App</title>
      <link>http://localhost:1313/2013/07/my-timer-web-app/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/07/my-timer-web-app/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2013/07/Clock-Promo-Med.jpg&#34; alt=&#34;Hero Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I spent the weekend cooking up a &lt;a href=&#34;https://chrome.google.com/webstore/detail/timer/keajpdeigjicancnhaknebefgekooiof?hl=en-US&#34;&gt;web app&lt;/a&gt;. It&amp;#8217;s fairly simple. Three files serves up everything I need for a simple timer (a few more added so it could be published as a packaged app in the Chrome Web Store). I feel that I have followed the MVC design intent fairly well with a HTML file (for content organization), a CSS file (for beautification and some animation) and a Javascript file to handle the timer functionality. I learned quite a bit and the saying that I&amp;#8217;m used to at my day job still applies: nothing is rarely ever as simple as it seems. Let me explain. I had to figure out and overcome some default behaviors for styling as well as how to implement my own timing function. I&amp;#8217;m sure there is a library somewhere, but no better way to learn than to implement it yourself. I did find some great resources, which will be posted at the bottom.&lt;/p&gt;

&lt;h2 id=&#34;html:645367c7fbc3bf2fd8812011329bcb2c&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;The markup is short and sweet. Keep in mind that all of the imagery is pure HTML and CSS; no images were uploaded. I basically set a bunch of &lt;code&gt;div&lt;/code&gt; elements up to arrange the second hand, the clock face and the control labels.&lt;/p&gt;

&lt;h2 id=&#34;css:645367c7fbc3bf2fd8812011329bcb2c&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;This was fun. I&amp;#8217;ve used the &lt;code&gt;transition&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt; properties before, but combining this with &lt;code&gt;keyframes&lt;/code&gt; opens up interesting animation possibilities.&lt;/p&gt;

&lt;p&gt;To animate the hand, a JQuery selector adds this class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.animation {
  animation: orbit 60s steps(360) infinite;
  -webkit-animation: orbit 60s steps(360) infinite;
  animation-duration: 60s;
  -webkit-animation-duration: 60s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I created an animation property called orbit. I directly prescribed the animation conditions at 0, 50 and 100% of the animation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@-webkit-keyframes orbit {
  0% {
    -webkit-transform: rotate(180deg);
    -webkit-transform-origin:top;
    transform: rotate(180deg);
    transform-origin:top;
  }
  50% {
    -webkit-transform: rotate(360deg);
    -webkit-transform-origin:top;
    transform: rotate(360deg);
    transform-origin:top;
  }
  100% {
    -webkit-transform: rotate(540deg);
    -webkit-transform-origin:top;
    transform: rotate(540deg);
    transform-origin:top;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;javascript-jquery:645367c7fbc3bf2fd8812011329bcb2c&#34;&gt;Javascript (JQuery)&lt;/h2&gt;

&lt;p&gt;I used JQuery to speed up development time and let me focus on the fun stuff: the timing! Since calculating times can be a bit tricky since I want the screen to continually update the elapsed time, since you know, I&amp;#8217;m making a timer application! I accomplished this with the built-in &lt;code&gt;setInterval()&lt;/code&gt; function. I feel that it is called often enough for a simple timer app (10 times / second). The interesting part on how the timing works is below. Note: Some variables were defined outside of the scope shown below. The main takeaway was how to deal with pausing and resuming the timer: a global variable &lt;code&gt;$prevTime&lt;/code&gt; was used to store the total elapsed time, which was added to the current timer. Note: On the output, there should be a &lt;code&gt;p&lt;/code&gt; wrapped around the &lt;code&gt;formatTime($totalTime)&lt;/code&gt; call&amp;#8230; something strange with WordPress&amp;#8217; text editor removing these.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&amp;quot;#start&amp;quot;).click(function () {

if(!$running){
$running = true; // Ensure that we can&#39;t start a 2nd concurrent timer

$start = new Date().getTime();

$doTime = window.setInterval(function() {clock($prevTime);},100);


// Run this function on setInterval to continuously update
// the time shown on the page.


function clock($p) {
$prevTime = $p; // pass in the previous time
$time = (new Date().getTime() - $start); // start calculating

$time = ($time / 100) / 10;
$time += parseFloat($prevTime); // add previously elapsed time

$totalTime = ($time).toFixed(2); // set to 2 decimals
$(&amp;quot;#time&amp;quot;).html(&amp;quot;&amp;lt;span&amp;gt;&amp;quot; + formatTime($totalTime) + &amp;quot;&amp;lt;/span&amp;gt;&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I implemented a simple version of a &lt;code&gt;printf&lt;/code&gt;-like function for the time format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function formatTime($tIn) {
var $hr, $min, $sec;
var $t = $tIn;
var $out = &amp;quot;&amp;quot;;
$hr = Math.floor($t / 3600); // hold the hours
$t -= $hr * 3600; // update the time var
$min = Math.floor($t / 60); // hold the minutes
$t -= $min * 60; // update the time var
$sec = $t.toFixed(2); // assign the seconds


// Some basic formatting for the output.
// Note this is a string and is not the
// number used for any time calculations.

$out = $hr + &amp;quot;:&amp;quot; + $min + &amp;quot;:&amp;quot; + $sec;
return $out;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code is hosted on my &lt;a title=&#34;Github&#34; href=&#34;https://github.com/loganwedwards/HTML-Timer&#34; target=&#34;_blank&#34;&gt;Github account&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Build a Selectable Power Source [Part 1]</title>
      <link>http://localhost:1313/2013/07/how-to-build-a-selectable-power-source-part-1/</link>
      <pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/07/how-to-build-a-selectable-power-source-part-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclaimer: I am not an electrical engineer. Do this at your own risk!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I hate waste. In fact, the entire driver for this little project was because I can&amp;#8217;t stand to see batteries be needlessly consumed. Is there really a need for a motorized baby swing to run on AA&amp;#8217;s? I bet for 90% of its uses, it will be placed inside; most likely conveniently positioned right next to an outlet in a comfortable 73 degrees Fahrenheit.&lt;/p&gt;

&lt;p&gt;Surprisingly, I have not found any great tutorials on how to build a circuit that works via a portable power source such as a couple of AA&amp;#8217;s or by another means, such as using an AC/DC adaptor (wall wart).&lt;/p&gt;

&lt;p&gt;The premise is simple: a switch to select one of two power sources: a battery pack or a wall plug.&lt;/p&gt;

&lt;p&gt;Schematic
&lt;img src=&#34;http://localhost:1313/img/2013/07/6v-voltage-regulator.png&#34; alt=&#34;Schematic&#34; /&gt;&lt;/p&gt;

&lt;p&gt;An image of a tested design will be shown in part 2.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Importance of Convergence</title>
      <link>http://localhost:1313/2013/05/the-importance-of-convergence/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/05/the-importance-of-convergence/</guid>
      <description>&lt;p&gt;I&amp;#8217;m sure that you&amp;#8217;ve heard of silos. No, not the kind that houseÂ &lt;a href=&#34;http://en.wikipedia.org/wiki/Intercontinental_ballistic_missile&#34; title=&#34;ICBMs&#34;&gt;ICBMs&lt;/a&gt;, but the idea of compartmentalizing different groups/specialties to work independently. Partly due to the company&amp;#8217;s culture and and the industry that I used to work in (nuclear energy), there is this idea that you are only as qualified as the title or degree that you hold. I can&amp;#8217;t change a sensor without having my hand held. It&amp;#8217;s bull and I don&amp;#8217;t buy it. I am a mechanical engineer by degree. I also:Â code, understand sparks in wires, know too many technical computer terms, know the 180Â° shutter rule and keyframing, play the guitar, designÂ &lt;a href=&#34;http://chocolateandcarrots.com&#34;&gt;websites&lt;/a&gt;, understand the difference between a slab and serif typeface and know how to cook. The point is that no one person, in my opinion, should be defined by their title, degree or singular skill. I&amp;#8217;m currently pursuing a master&amp;#8217;s degree in computer science. Why? I love to learn, I&amp;#8217;m a geek and would love to find a meaningful way to find a convergence point between the physical and the abstract worlds. Maybe I will continue to design automation equipment and find a way to programÂ &lt;a href=&#34;http://en.wikipedia.org/wiki/Programmable_logic_controller&#34; title=&#34;PLCs&#34;&gt;PLCs&lt;/a&gt;Â andÂ microcontrollers. Maybe I will help develop software that takes advantage of some hardware component (&lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_of_Things&#34; title=&#34;internet of things&#34;&gt;internet of things&lt;/a&gt;Â comes to mind). Maybe I could be a Mythbusters host! It doesn&amp;#8217;t matter. Breadth of understanding in more important than depth. NaÃ¯ve or common knowledge can lead to a deeper understanding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Reset a PCâ€™s Master Password</title>
      <link>http://localhost:1313/2012/12/how-to-reset-a-pcs-master-password/</link>
      <pubDate>Fri, 14 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/12/how-to-reset-a-pcs-master-password/</guid>
      <description>&lt;p&gt;I inherited aÂ &lt;em&gt;broken&lt;/em&gt; PC, a Toshiba Satellite M305D, from family. The machine is only a few years old and still functions fine. The problem was that a password was being required after the BIOS loaded (before Windows Vista). I did not have a rescue disk and the pc would not boot off of a Windows or Live Ubuntu disk (CD or USB). I followed trails around the internet to reset the password and found that by pulling the CMOS battery off of the motherboard would reset the passworld&amp;#8230; and reset it did!&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s the steps that I took to reset the master password:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove the battery and case components.&lt;/li&gt;
&lt;li&gt;Remove the hard drive (and RAM, possibly)&lt;/li&gt;
&lt;li&gt;Remove the screws from the bottom side of the laptop&lt;/li&gt;
&lt;li&gt;Remove a small cover on the north side of the keyboard. Remove the respective screws and detach the ribbon cable from the motherboard.&lt;/li&gt;
&lt;li&gt;Remove the battery. ON this machine, it looked like a sealed disk with 2 leads which attached to the motherboard via plug.&lt;/li&gt;
&lt;li&gt;Due to time, I waited till the next day to plug the battery back in, but 30 minutes is a good recommendation.&lt;/li&gt;
&lt;li&gt;Re assemble pc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point I had already formatted the hard drive since I was planning on installing Ubuntu on it. Plug in a bootable drive (make sure the BIOS boot order has USB or CDROM appear before the HDD). It worked like a charm and I wrote this post on a rescued machine destined for the trash&amp;#8230;or recycling center.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Very Temporary Raspberry Pi Case</title>
      <link>http://localhost:1313/2012/12/a-very-temporary-raspberry-pi-case-lecreate/</link>
      <pubDate>Sat, 08 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/12/a-very-temporary-raspberry-pi-case-lecreate/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-15/e15/11249488_1660538884175536_1164254936_n.jpg&#34; alt=&#34;case&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Micro Adjustment on Canon 7D</title>
      <link>http://localhost:1313/2012/06/micro-adjustment-on-canon-7d/</link>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/06/micro-adjustment-on-canon-7d/</guid>
      <description>&lt;p&gt;Until recently, we had a great lens for the 7D: the Canon 50mm f/1.4 USM lens. My wife and I bought this lens with a 7D body to start out our kit. She loves the focal length for her food photography, which you can see over at &lt;a href=&#34;http://chocolateandcarrots.com/blog&#34;&gt;Chocolate &amp;amp; Carrots&lt;/a&gt;. When we first started to use the lens, we were a bit bummed on the sharpness results. Knowing that our camera (along with other professional cameras in Canon&amp;#8217;s lineup) has a lens micro adjustment feature, I decided to give it a spin. Wow, what a difference in sharpness. I set the camera on a tripod a few feet away from the subject (can&amp;#8217;t remember the exposure settings) and snapped a few shots at different adjustment factors. You can search for the details on how this works elsewhere; I just wanted to share the results.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2012/06/plus5crop.jpg&#34; alt=&#34;Before Adjustment&#34; /&gt;
Before adjustment
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2012/06/plus12crop.jpg&#34; alt=&#34;After Adjustment&#34; /&gt;
After adjustment
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;So, there is still some room for improvement, but the increase in sharpness here was enough to appease my wife&amp;#8217;s critical eye.&lt;/p&gt;

&lt;p&gt;Now that the lens has been dropped on the pavement, it was time to upgrade&amp;#8230; to the f/1.2 version.&lt;/p&gt;

&lt;p&gt;Bottom line: use this feature for every lens that you own. I&amp;#8217;ve also used this feature for the new 50mm and our Tokina 11-16 lens.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>